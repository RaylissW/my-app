{"version":3,"sources":["Components/useStyles.js","Components/MakeAppBar.js","Components/MakeList.js","Components/Form/NameFill.js","Components/Form/JobSelect.js","Components/Form/DateOfBirth.js","Components/Form/RadioGender.js","Components/Form/RadioEmployed.js","Components/Form/MakeForm.js","Components/MainBody.js","App.js","serviceWorker.js","index.js","helpers.js","logo.svg"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","appBar","zIndex","drawer","commandButton","marginLeft","spacing","marginRight","width","flexShrink","drawerPaper","content","flexGrow","padding","noLabel","marginTop","toolbar","mixins","card","minWidth","MakeAppBar","props","classes","className","AppBar","position","Toolbar","undefined","selectedIndex","Button","addPerson","disabled","deletePerson","MakeList","handleListItemClick","event","index","changeSelectedIndex","listItems","persons","map","person","ListItem","key","button","selected","onClick","onDoubleClick","ListItemText","primary","name","job","date","getDate","getMonth","getFullYear","gender","employed","List","NameFill","error","fillError","TextField","required","id","label","placeholder","helperText","fullWidth","margin","onChange","handleInputChange","value","personName","jobs","JobSelect","personJob","console","log","select","option","MenuItem","DateOfBirth","utils","DateFnsUtils","Grid","container","justify","disableToolbar","variant","format","personDate","pickedDate","target","KeyboardButtonProps","RadioGender","FormControl","component","FormLabel","RadioGroup","aria-label","personGender","row","FormControlLabel","control","Radio","color","labelPlacement","RadioEmployed","personEmployed","MakeForm","newPerson","noValidate","autoComplete","Card","CardContent","Typography","item","MainBody","CssBaseline","Drawer","paper","require","App","state","Date","this","setState","slice","splice","push","length","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","replace","field","module","exports"],"mappings":"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","file":"static/js/main.0e4dfd9d.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 400;\r\nexport const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\"\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1\r\n        },\r\n        commandButton: {\r\n            marginLeft: theme.spacing(15),\r\n            marginRight: theme.spacing(30)\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth\r\n        },\r\n        content: {\r\n            flexGrow: 2,\r\n            padding: theme.spacing(2),\r\n            //maxWidth: 1500\r\n        },\r\n        noLabel: {\r\n            marginTop: theme.spacing(3)\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        card: {\r\n            minWidth: 275,\r\n        },\r\n    }));\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport default function MakeAppBar(props) {\r\n    const classes = useStyles();\r\n   // document.getElementById(\"test\").disabled = true;\r\n    return (\r\n        <div className={classes.root}>\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        {(props.selectedIndex == undefined) ?\r\n                            <Button className={classes.commandButton} className=\"Add\" onClick={() => props.addPerson()}\r\n                                    color=\"inherit\">\r\n                                Добавить\r\n                            </Button>\r\n                            :\r\n                            <Button disabled className={classes.commandButton} className=\"Add\" onClick={() => props.addPerson()}\r\n                                    color=\"inherit\">\r\n                                Добавить\r\n                            </Button>\r\n                        }\r\n                        {(props.selectedIndex == undefined) ?\r\n                            <Button disabled  className={classes.commandButton} className=\"Delete\"\r\n                                    color=\"inherit\" onClick={() => props.deletePerson()}>\r\n                                Удалить\r\n                            </Button>\r\n                            : <Button  className={classes.commandButton} className=\"Delete\" color=\"inherit\"\r\n                                      onClick={() => props.deletePerson()}>\r\n                                Удалить\r\n                            </Button>\r\n                        }\r\n                    </Toolbar>\r\n                </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\n\r\nexport default function MakeList(props) {\r\n    const classes = useStyles();\r\n    const handleListItemClick = (event, index) => {\r\n        props.changeSelectedIndex(index);\r\n        //props.deletePerson.selectedIndex=index;\r\n       // props.formChange.selectedIndex=(index);\r\n    };\r\n    const persons = props.persons;\r\n  //  {(persons.length)}\r\n    const listItems = persons.map((person,index) =>\r\n            <ListItem key={index}\r\n                      button\r\n                      selected={props.selectedIndex === index}\r\n                      onClick={event => handleListItemClick(event, index)}\r\n                      onDoubleClick={event => handleListItemClick(event,undefined)}\r\n                      >\r\n                <ListItemText primary={person.name + \", \" + person.job + \", \" + person.date.getDate()+\"/\"+ (person.date.getMonth()+1)+\"/\" + person.date.getFullYear()+ \", \" + person.gender +\", \"  + person.employed}/>\r\n            </ListItem>\r\n    );\r\n    return (\r\n        <div className={classes.toolbar}>\r\n            <List >\r\n                {listItems}\r\n            </List>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {useStyles} from '../useStyles';\r\n\r\nexport default function NameFill(props) {\r\n    const classes = useStyles();\r\n    return props.error.fillError ? (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                error\r\n                required\r\n                id=\"standard-required\"\r\n                label= {props.error.fillError? 'Поле не заполнено!' : 'Обязательно к заполнению'}\r\n                placeholder=\"ФИО\"\r\n                helperText=\"Фамилия Имя Отчество сотрудника\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={props.handleInputChange}\r\n                value={props.personName}\r\n                name=\"name\"\r\n            />\r\n        </div>\r\n    ) : (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label= {props.error.fillError? 'Поле не заполнено!' : 'Обязательно к заполнению'}\r\n                placeholder=\"ФИО\"\r\n                helperText=\"Фамилия Имя Отчество сотрудника\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={props.handleInputChange}\r\n                value={props.personName}\r\n                name=\"name\"\r\n            />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {useStyles} from '../useStyles';\r\n\r\nconst jobs = [\r\n    {\r\n        value: \"Frontend-разработчик\",\r\n        label: \"Frontend-разработчик\"\r\n    },\r\n    {\r\n        value: \"Аналитик\",\r\n        label: \"Аналитик\"\r\n    },\r\n    {\r\n        value: \"BackEnd-разработчик\",\r\n        label: \"BackEnd-разработчик\"\r\n    },\r\n    {\r\n        value: \"Тех. поддержкa\",\r\n        label: \"Тех. поддержкa\"\r\n    }\r\n];\r\n\r\nexport default function JobSelect(props) {\r\n    const classes = useStyles();\r\n    let personJob=props.personJob;\r\n    console.log(personJob);\r\n    const handleChange = event => {\r\n        console.log(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                required\r\n                id=\"standard-select-job\"\r\n                select\r\n                label=\"Обязательно к заполнению\"\r\n                value={(props.selectedIndex==undefined) ? \"Frontend-разработчик\" : props.personJob}\r\n                onChange={props.handleInputChange}\r\n                helperText=\"Должность, занимаемая сотрудником\"\r\n                name=\"job\"\r\n            >\r\n                {jobs.map(option => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport {useStyles} from '../useStyles';\r\nimport {handleInputChange} from \"../../helpers\";\r\n\r\n\r\nexport default function DateOfBirth(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid container justify=\"space-around\">\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Дата рождения:\"\r\n                        value={props.personDate}\r\n                        onChange={(pickedDate)=>{\r\n                            const event={\r\n                                target: {\r\n                                    value: pickedDate,\r\n                                    name: \"date\"\r\n                                }\r\n                            };\r\n                            props.handleInputChange(event)\r\n                        }}\r\n                        name=\"date\"\r\n                        KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\"\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport {useStyles} from '../useStyles';\r\n\r\n\r\nexport default function RadioGender(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Пол сотрудника</FormLabel>\r\n                <RadioGroup\r\n                    aria-label=\"position\"\r\n                    name=\"gender\"\r\n                    value={props.personGender}\r\n                    onChange={props.handleInputChange}\r\n                    row\r\n\r\n                >\r\n                    <FormControlLabel\r\n                        value=\"Мужчина\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Мужской\"\r\n                        labelPlacement=\"start\"\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"Женщина\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Женский\"\r\n                        labelPlacement=\"start\"\r\n                    />\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport {useStyles} from '../useStyles';\r\n\r\nexport default function RadioEmployed(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Уволен?</FormLabel>\r\n                    <RadioGroup\r\n                        aria-label=\"position\"\r\n                        name=\"employed\"\r\n                        value={props.personEmployed}\r\n                        onChange={props.handleInputChange}\r\n                        row\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"Уволен\"\r\n                            control={<Radio color=\"primary\" />}\r\n                            label=\"Да\"\r\n                            labelPlacement=\"start\"\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"Трудоустроен\"\r\n                            control={<Radio color=\"primary\" />}\r\n                            label=\"Нет\"\r\n                            labelPlacement=\"start\"\r\n                        />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NameFill from './NameFill';\r\nimport JobSelect from './JobSelect';\r\nimport DateOfBirth from './DateOfBirth';\r\nimport RadioGender from './RadioGender';\r\nimport RadioEmployed from './RadioEmployed';\r\nimport {useStyles} from '../useStyles';\r\n\r\n\r\nexport default function MakeForm(props) {\r\n    const classes = useStyles()\r\n  //  const selectedIndex = props.formChange.selectedIndex;\r\n    const person= (undefined==props.selectedIndex) ? props.newPerson : props.persons[props.selectedIndex];\r\n\r\n    return (\r\n        <div>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        <Typography>Карточка сотрудника:</Typography>\r\n                        <Grid item>\r\n                            <NameFill personName={person.name} handleInputChange={props.handleInputChange} error={props.error}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <JobSelect personJob={person.job} handleInputChange={props.handleInputChange} selectedIndex={props.selectedIndex}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <DateOfBirth  personDate={person.date} handleInputChange={props.handleInputChange}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <RadioGender personGender={person.gender} handleInputChange={props.handleInputChange}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <RadioEmployed personEmployed={person.employed} handleInputChange={props.handleInputChange}/>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}","import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport React from \"react\";\r\nimport MakeAppBar from './MakeAppBar';\r\nimport MakeList from './MakeList';\r\nimport MakeForm from './Form/MakeForm';\r\nimport {useStyles} from './useStyles';\r\n\r\nconst drawerWidth = 400;\r\n\r\n\r\n\r\nexport default function MainBody(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <MakeAppBar deletePerson={props.deletePerson} addPerson={props.addPerson} selectedIndex={props.selectedIndex}/>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} />\r\n             <MakeList persons={props.persons} selectedIndex={props.selectedIndex} changeSelectedIndex={props.changeSelectedIndex}/>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                 <MakeForm persons={props.persons} selectedIndex={props.selectedIndex} newPerson={props.newPerson} handleInputChange={props.handleInputChange} error={props.error}/>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport MainBody from \"./Components/MainBody\";\r\nimport MakeForm from './Components/Form/MakeForm';\r\n\r\nconst handleInputChange = require('./helpers').handleInputChange;\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state={\r\n            persons: [\r\n                {name:\"Олегов Олег Олегович\",job:\"Frontend-разработчик\",date: new Date (\"1989.02.12\"),gender: \"Мужчина\",employed:\"Трудоустроен\"},\r\n                {name:\"Евсеенков Максим Дмитриевич\",job:\"Тех. поддержкa\",date:new Date (\"2000.11.26\"),gender: \"Мужчина\", employed:\"Уволен\"} ,\r\n                {name:\"Камски Лиам Арсеньевич\",job:\"Аналитик\",date:new Date (\"1999.08.1\"),gender: \"Мужчина\", employed:\"Уволен\"},\r\n                {name:\"Хейл Дерек Олегович\",job:\"BackEnd-разработчик\",date:new Date (\"1994.07.30\"),gender: \"Мужчина\",employed:\"Трудоустроен\"},\r\n                {name:\"Мощанская Алиса Евгеньевна\",job:\"Frontend-разработчик\",date:new Date (\"2000.06.14\"),gender: \"Женщина\",employed:\"Уволен\"},\r\n            ],\r\n            selectedIndex:undefined,\r\n            newPerson:{name:\"\",job: \"\",date:new Date (\"1989.02.12\"),gender: \"\",employed:\"\"},\r\n            error:{\r\n                fillError:false,\r\n            }\r\n        }\r\n\r\n    }\r\n    handleInputChange(event) {\r\n        this.setState(handleInputChange(this.state, event));\r\n    }\r\n    changeSelectedIndex (index) {\r\n        if (!this.state.error.fillError)\r\n            this.setState({...this.state, selectedIndex: index});\r\n        else if (this.state.error.fillError && this.state.selectedIndex == undefined)\r\n            this.setState({...this.state, selectedIndex: index,error:{fillError: false}});\r\n    }\r\n    //@todo при удалении ставить селектед индекс в андефаинд\r\n    deletePerson () {\r\n        if (undefined!==this.state.selectedIndex) {\r\n            const persons = this.state.persons.slice();\r\n            persons.splice(this.state.selectedIndex, 1);\r\n            const selectedIndex=this.state.selectedIndex;\r\n            this.setState({...this.state, persons,selectedIndex: undefined});\r\n        }\r\n    }\r\n    addPerson (){\r\n        if (undefined==this.state.selectedIndex) {\r\n            const persons = this.state.persons.slice();\r\n            let newPerson=this.state.newPerson;\r\n            let selectedIndex=this.state.selectedIndex;\r\n            const error=this.state.error;\r\n            if (!newPerson[\"name\"]==\"\") {\r\n                persons.push(newPerson);\r\n                newPerson={name:\"\",job: \"\",date:new Date (\"1989.02.12\"),gender: \"\",employed:\"\"};\r\n                selectedIndex=persons.length-1;\r\n            }\r\n            else\r\n                error.fillError=true;\r\n            this.setState({...this.state, persons,newPerson,selectedIndex});\r\n        }\r\n    }\r\n    render () {\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <MainBody\r\n                    {...this.state}\r\n                    deletePerson={()=>this.deletePerson()}\r\n                    changeSelectedIndex={(index)=>this.changeSelectedIndex(index)}\r\n                    handleInputChange={(event)=>this.handleInputChange(event)}\r\n                    addPerson={()=>this.addPerson()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export function handleInputChange(state, event) {\r\n//function handleInputChange(state, event) {\r\n    const target = event.target;\r\n    //const value = target.type === 'select' ? target.checked : target.value;\r\n    //debugger;\r\n    const value = (target.name==\"name\")? target.value.replace(/^\\s+/g, ''): target.value;\r\n    const field = target.name;\r\n    const persons = state.persons.slice();\r\n    const newPerson=state.newPerson;\r\n    const error=state.error;\r\n    error.fillError = (field==\"name\" && value==\"\");\r\n    if(undefined==state.selectedIndex)\r\n        newPerson [field]= value;\r\n    else\r\n        persons[state.selectedIndex][field] = value;\r\n        console.log(error.fillError);\r\n    return ({...state, persons, newPerson, error});\r\n}\r\n\r\n// module.exports={handleInputChange};\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}