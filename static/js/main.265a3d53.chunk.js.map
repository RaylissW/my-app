{"version":3,"sources":["logo.svg","Components/useStyles.js","Components/MakeAppBar.js","Components/MakeList.js","Components/Form/NameFill.js","Components/Form/JobSelect.js","Components/Form/DateOfBirth.js","Components/Form/RadioGender.js","Components/Form/RadioEmployed.js","Components/Form/Mates.js","Components/Form/MakeForm.js","Components/MainBody.js","App.js","serviceWorker.js","index.js","helpers.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","flexWrap","appBar","zIndex","drawer","commandButton","marginLeft","spacing","marginRight","width","flexShrink","drawerPaper","content","flexGrow","padding","noLabel","marginTop","toolbar","mixins","card","minWidth","MakeAppBar","props","classes","className","AppBar","position","Toolbar","Typography","Button","addPerson","deletePerson","console","log","selectedIndex","MakeList","handleListItemClick","event","index","changeSelectedIndex","listItems","persons","map","person","ListItem","key","button","selected","onClick","onDoubleClick","undefined","ListItemText","primary","name","List","NameFill","TextField","required","id","label","placeholder","helperText","fullWidth","margin","onChange","handleInputChange","value","personName","jobs","JobSelect","personJob","select","option","MenuItem","DateOfBirth","utils","DateFnsUtils","Grid","container","justify","disableToolbar","variant","format","personDate","pickedDate","target","KeyboardButtonProps","RadioGender","FormControl","component","FormLabel","RadioGroup","aria-label","personGender","row","FormControlLabel","control","Radio","color","labelPlacement","RadioEmployed","personEmployed","names","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","React","useState","setPersonName","formControl","InputLabel","Select","labelId","multiple","input","Input","renderValue","join","Checkbox","checked","indexOf","MakeForm","newPerson","noValidate","autoComplete","Card","CardContent","item","job","date","gender","employed","personMates","mates","MainBody","CssBaseline","Drawer","paper","require","App","state","Date","this","setState","slice","splice","push","length","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","field"],"mappings":"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","file":"static/js/main.265a3d53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 300;\r\nexport const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\"\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1\r\n        },\r\n        commandButton: {\r\n            marginLeft: theme.spacing(15),\r\n            marginRight: theme.spacing(20)\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth\r\n        },\r\n        content: {\r\n            flexGrow: 2,\r\n            padding: theme.spacing(2),\r\n            //maxWidth: 1500\r\n        },\r\n        noLabel: {\r\n            marginTop: theme.spacing(3)\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        card: {\r\n            minWidth: 275,\r\n        },\r\n    }));\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport default function MakeAppBar(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography>Список Сотрудников</Typography>\r\n                        <Button className={classes.commandButton} className=\"Add\" onClick={()=>props.addPerson()} color=\"inherit\">\r\n                            Добавить\r\n                        </Button>\r\n                        <Button className={classes.commandButton} className=\"Delete\" color=\"inherit\" onClick={()=>props.deletePerson()}>\r\n                            {console.log(props.selectedIndex)}\r\n                            Удалить\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\n\r\nexport default function MakeList(props) {\r\n    const classes = useStyles();\r\n    const handleListItemClick = (event, index) => {\r\n        props.changeSelectedIndex(index);\r\n        //props.deletePerson.selectedIndex=index;\r\n       // props.formChange.selectedIndex=(index);\r\n    };\r\n    const persons = props.persons;\r\n    const listItems = persons.map((person,index) =>\r\n            <ListItem key={index}\r\n                      button\r\n                      selected={props.selectedIndex === index}\r\n                      onClick={event => handleListItemClick(event, index)}\r\n                      onDoubleClick={event => handleListItemClick(event,undefined)}\r\n                      >\r\n                <ListItemText primary={person.name}/>\r\n            </ListItem>\r\n    );\r\n    return (\r\n        <div className={classes.toolbar}>\r\n            <List >\r\n                {listItems}\r\n            </List>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {useStyles} from '../useStyles';\r\n\r\nexport default function NameFill(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Обязательно к заполнению\"\r\n                placeholder=\"ФИО\"\r\n                helperText=\"Фамилия Имя Отчество сотрудника\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={props.handleInputChange}\r\n                value={props.personName}\r\n                name=\"name\"\r\n            />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {useStyles} from '../useStyles';\r\n\r\nconst jobs = [\r\n    {\r\n        value: \"Frontender\",\r\n        label: \"Frontend-разработчик\"\r\n    },\r\n    {\r\n        value: \"Analyst\",\r\n        label: \"Аналитик\"\r\n    },\r\n    {\r\n        value: \"BackEnder\",\r\n        label: \"BackEnd-разработчик\"\r\n    },\r\n    {\r\n        value: \"Support\",\r\n        label: \"Тех. поддержкa\"\r\n    }\r\n];\r\n\r\nexport default function JobSelect(props) {\r\n    const classes = useStyles();\r\n    let personJob=props.personJob;\r\n    console.log(personJob);\r\n    const handleChange = event => {\r\n        console.log(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                required\r\n                id=\"standard-select-job\"\r\n                select\r\n                label=\"Обязательно к заполнению\"\r\n                value={props.personJob}\r\n                onChange={props.handleInputChange}\r\n                helperText=\"Должность, занимаемая сотрудником\"\r\n                name=\"job\"\r\n            >\r\n                {jobs.map(option => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport {useStyles} from '../useStyles';\r\nimport {handleInputChange} from \"../../helpers\";\r\n\r\n\r\nexport default function DateOfBirth(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid container justify=\"space-around\">\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Дата рождения:\"\r\n                        value={props.personDate}\r\n                        onChange={(pickedDate)=>{\r\n                            const event={\r\n                                target: {\r\n                                    value: pickedDate,\r\n                                    name: \"date\"\r\n                                }\r\n                            };\r\n                            props.handleInputChange(event)\r\n                        }}\r\n                        name=\"date\"\r\n                        KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\"\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport {useStyles} from '../useStyles';\r\n\r\n\r\nexport default function RadioGender(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Пол сотрудника</FormLabel>\r\n                <RadioGroup\r\n                    aria-label=\"position\"\r\n                    name=\"gender\"\r\n                    value={props.personGender}\r\n                    onChange={props.handleInputChange}\r\n                    row\r\n\r\n                >\r\n                    <FormControlLabel\r\n                        value=\"Male\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Мужской\"\r\n                        labelPlacement=\"start\"\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"Female\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Женский\"\r\n                        labelPlacement=\"start\"\r\n                    />\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport {useStyles} from '../useStyles';\r\n\r\nexport default function RadioEmployed(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Уволен?</FormLabel>\r\n                    <RadioGroup\r\n                        aria-label=\"position\"\r\n                        name=\"employed\"\r\n                        value={props.personEmployed}\r\n                        onChange={props.handleInputChange}\r\n                        row\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"Yes\"\r\n                            control={<Radio color=\"primary\" />}\r\n                            label=\"Да\"\r\n                            labelPlacement=\"start\"\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"No\"\r\n                            control={<Radio color=\"primary\" />}\r\n                            label=\"Нет\"\r\n                            labelPlacement=\"start\"\r\n                        />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {useStyles} from '../useStyles';\r\n\r\n\r\nconst names = [\r\n    \"Oliver Hansen\",\r\n    \"Van Henry\",\r\n    \"April Tucker\",\r\n    \"Ralph Hubbard\",\r\n    \"Omar Alexander\",\r\n    \"Carlos Abbott\",\r\n    \"Miriam Wagner\",\r\n    \"Bradley Wilkerson\",\r\n    \"Virginia Andrews\",\r\n    \"Kelly Snyder\"\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250\r\n        }\r\n    }\r\n};\r\n\r\nexport default function MakeList() {\r\n    const classes = useStyles();\r\n    const [personName, setPersonName] = React.useState([]);\r\n\r\n    const handleChangeSelect = event => {\r\n        setPersonName(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-mutiple-checkbox-label\">\r\n                        Колеги\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-mutiple-checkbox-label\"\r\n                        id=\"demo-mutiple-checkbox\"\r\n                        multiple\r\n                        fullWidth\r\n                        value={personName}\r\n                        onChange={handleChangeSelect}\r\n                        input={<Input />}\r\n                        renderValue={selected => selected.join(\", \")}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        {names.map(name => (\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={personName.indexOf(name) > -1} />\r\n                                <ListItemText primary={name} />\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NameFill from './NameFill';\r\nimport JobSelect from './JobSelect';\r\nimport DateOfBirth from './DateOfBirth';\r\nimport RadioGender from './RadioGender';\r\nimport RadioEmployed from './RadioEmployed';\r\nimport Mates from './Mates';\r\nimport {useStyles} from '../useStyles';\r\n\r\n\r\nexport default function MakeForm(props) {\r\n    const classes = useStyles()\r\n  //  const selectedIndex = props.formChange.selectedIndex;\r\n    const person= (undefined==props.selectedIndex) ? props.newPerson : props.persons[props.selectedIndex];\r\n\r\n    return (\r\n        <div>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        <Typography>Карточка сотрудника:</Typography>\r\n                        <Grid item>\r\n                            <NameFill personName={person.name} handleInputChange={props.handleInputChange}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <JobSelect personJob={person.job} handleInputChange={props.handleInputChange}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <DateOfBirth  personDate={person.date} handleInputChange={props.handleInputChange}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <RadioGender personGender={person.gender} handleInputChange={props.handleInputChange}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <RadioEmployed personEmployed={person.employed} handleInputChange={props.handleInputChange}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Mates personMates={person.mates}/>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}","import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport React from \"react\";\r\nimport MakeAppBar from './MakeAppBar';\r\nimport MakeList from './MakeList';\r\nimport MakeForm from './Form/MakeForm';\r\nimport {useStyles} from './useStyles';\r\n\r\nconst drawerWidth = 300;\r\n\r\n\r\n\r\nexport default function MainBody(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <MakeAppBar deletePerson={props.deletePerson} addPerson={props.addPerson}/>\r\n            {props.persons[0].name\r\n            }\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} />\r\n             <MakeList persons={props.persons} selectedIndex={props.selectedIndex} changeSelectedIndex={props.changeSelectedIndex}/>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                 <MakeForm persons={props.persons} selectedIndex={props.selectedIndex} newPerson={props.newPerson} handleInputChange={props.handleInputChange}/>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport MainBody from \"./Components/MainBody\";\r\nimport MakeForm from './Components/Form/MakeForm';\r\n\r\nconst handleInputChange = require('./helpers').handleInputChange;\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state={\r\n            persons: [\r\n                {name:\"Олег\",job:\"Frontender\",date: new Date (\"1989.02.12\"),gender: \"Male\",employed:\"Yes\",mates:[\"Maxim\", \"Kristina\"]},\r\n                {name:\"Максим\",job:\"Support\",date:new Date (\"2000.11.26\"),gender: \"Male\", employed:\"No\", mates:[\"Liam\",\"Derek\"]} ,\r\n                {name:\"Лиам\",job:\"Analyst\",date:new Date (\"1999.08.1\"),gender: \"Male\", employed:\"No\",mates:[\"Derek\"]},\r\n                {name:\"Дерек\",job:\"BackEnder\",date:new Date (\"1994.07.30\"),gender: \"Male\",employed:\"Yes\",mates:[]},\r\n                {name:\"Алиса\",job:\"Frontender\",date:new Date (\"2000.06.14\"),gender: \"Female\",employed:\"No\",mates:[]},\r\n            ],\r\n            selectedIndex:undefined,\r\n            newPerson:{name:\"\",job: \"\",date:new Date (\"1989.02.12\"),gender: \"\",employed:\"\",mates:[]}\r\n        }\r\n\r\n    }\r\n    handleInputChange(event) {\r\n        this.setState(handleInputChange(this.state, event));\r\n        /*const target = event.target;\r\n        const value = target.type === 'select' ? target.checked : target.value;\r\n        const componentName = target.name;\r\n        const persons = this.state.persons.slice();\r\n        persons[this.state.selectedIndex][componentName]= value;\r\n        this.setState({...this.state, persons});*/\r\n    }\r\n    changeSelectedIndex (index){\r\n        this.setState({...this.state, selectedIndex: index});\r\n    }\r\n    //@todo при удалении ставить селектед индекс в андефаинд\r\n    deletePerson () {\r\n        if (undefined!==this.state.selectedIndex) {\r\n            const persons = this.state.persons.slice();\r\n            persons.splice(this.state.selectedIndex, 1);\r\n            const selectedIndex=this.state.selectedIndex;\r\n            this.setState({...this.state, persons,selectedIndex: undefined});\r\n        }\r\n    }\r\n    addPerson (){\r\n        if (undefined==this.state.selectedIndex) {\r\n            const persons = this.state.persons.slice();\r\n            const newPerson=this.state.newPerson;\r\n            persons.push(newPerson);\r\n            this.setState({...this.state, persons,newPerson:{name:\"\",job: \"\",date:new Date (\"1989.02.12\"),gender: \"\",employed:\"\",mates:[]},selectedIndex:persons.length-1});\r\n        }\r\n    }\r\n    render () {\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <MainBody\r\n                    {...this.state}\r\n                    deletePerson={()=>this.deletePerson()}\r\n                    changeSelectedIndex={(index)=>this.changeSelectedIndex(index)}\r\n                    handleInputChange={(event)=>this.handleInputChange(event)}\r\n                    addPerson={()=>this.addPerson()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export function handleInputChange(state, event) {\r\n//function handleInputChange(state, event) {\r\n    const target = event.target;\r\n    //const value = target.type === 'select' ? target.checked : target.value;\r\n    debugger;\r\n    const value = target.value;\r\n    const field = target.name;\r\n    const persons = state.persons.slice();\r\n    const newPerson=state.newPerson;\r\n    if(undefined==state.selectedIndex)\r\n        newPerson [field]= value;\r\n    else\r\n    persons[state.selectedIndex][field]= value;\r\n    return ({...state, persons, newPerson});\r\n}\r\n\r\n// module.exports={handleInputChange};\r\n"],"sourceRoot":""}